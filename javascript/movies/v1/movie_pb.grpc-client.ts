/* eslint-disable */
// @generated by protobuf-ts 2.8.2 with parameter long_type_string,add_pb_suffix,ts_nocheck,eslint_disable,server_grpc1,client_grpc1
// @generated from protobuf file "movies/v1/movie.proto" (package "movies.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { MoviesService } from "./movie_pb";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { CreateMovieResponse } from "./movie_pb";
import type { CreateMovieRequest } from "./movie_pb";
import type { GetMovieByIdResponse } from "./movie_pb";
import type { GetMovieByIdRequest } from "./movie_pb";
import * as grpc from "@grpc/grpc-js";
/**
 * The movies service definition.
 *
 * @generated from protobuf service movies.v1.MoviesService
 */
export interface IMoviesServiceClient {
    /**
     * Retrieves the movie with the given title.
     *
     * @generated from protobuf rpc: GetMovieById(movies.v1.GetMovieByIdRequest) returns (movies.v1.GetMovieByIdResponse);
     */
    getMovieById(input: GetMovieByIdRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetMovieByIdResponse) => void): grpc.ClientUnaryCall;
    getMovieById(input: GetMovieByIdRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: GetMovieByIdResponse) => void): grpc.ClientUnaryCall;
    getMovieById(input: GetMovieByIdRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetMovieByIdResponse) => void): grpc.ClientUnaryCall;
    getMovieById(input: GetMovieByIdRequest, callback: (err: grpc.ServiceError | null, value?: GetMovieByIdResponse) => void): grpc.ClientUnaryCall;
    /**
     * Creates a movie.
     *
     * @generated from protobuf rpc: CreateMovie(movies.v1.CreateMovieRequest) returns (movies.v1.CreateMovieResponse);
     */
    createMovie(input: CreateMovieRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreateMovieResponse) => void): grpc.ClientUnaryCall;
    createMovie(input: CreateMovieRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: CreateMovieResponse) => void): grpc.ClientUnaryCall;
    createMovie(input: CreateMovieRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreateMovieResponse) => void): grpc.ClientUnaryCall;
    createMovie(input: CreateMovieRequest, callback: (err: grpc.ServiceError | null, value?: CreateMovieResponse) => void): grpc.ClientUnaryCall;
}
/**
 * The movies service definition.
 *
 * @generated from protobuf service movies.v1.MoviesService
 */
export class MoviesServiceClient extends grpc.Client implements IMoviesServiceClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * Retrieves the movie with the given title.
     *
     * @generated from protobuf rpc: GetMovieById(movies.v1.GetMovieByIdRequest) returns (movies.v1.GetMovieByIdResponse);
     */
    getMovieById(input: GetMovieByIdRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetMovieByIdResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetMovieByIdResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: GetMovieByIdResponse) => void)): grpc.ClientUnaryCall {
        const method = MoviesService.methods[0];
        return this.makeUnaryRequest<GetMovieByIdRequest, GetMovieByIdResponse>(`/${MoviesService.typeName}/${method.name}`, (value: GetMovieByIdRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): GetMovieByIdResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * Creates a movie.
     *
     * @generated from protobuf rpc: CreateMovie(movies.v1.CreateMovieRequest) returns (movies.v1.CreateMovieResponse);
     */
    createMovie(input: CreateMovieRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreateMovieResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreateMovieResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: CreateMovieResponse) => void)): grpc.ClientUnaryCall {
        const method = MoviesService.methods[1];
        return this.makeUnaryRequest<CreateMovieRequest, CreateMovieResponse>(`/${MoviesService.typeName}/${method.name}`, (value: CreateMovieRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): CreateMovieResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
}
